# AUTHOR: PRITAM SUWAL SHRESTHA (23771397)

# SCRIPT NAME: preprocess
# DESCRIPTION: ADD DESCRIPTION LATER ON

#!/usr/bin/env bash

# Colored output for debugging: bash -xv cyber_breaches <tsv_file> <second_argument>
PS4=$'\e[1;32m+${BASH_SOURCE}:${LINENO}: \e[0m'

COMMAND=$0

USAGE_MSG="USAGE: $COMMAND <tsv_file>"

# Exit Codes
SUCCESS_EXIT_CODE=0
INVALID_ARGUMENTS_EXIT_CODE=1
FILE_NOT_FOUND_EXIT_CODE=2
DATA_NOT_FOUND_EXIT_CODE=3
INVALID_FILE_EXIT_CODE=4
INVALID_INPUT_EXIT_CODE=5

# Check if the number of arguments is 1. If not, echo the Usage of the command
if [[ $# -ne 1 ]]; then
    echo $USAGE_MSG >/dev/stderr

    exit $INVALID_ARGUMENTS_EXIT_CODE
fi

tsv_file=$1 # First argument is a tab seperated value file

# Checks if the file exist and if it exist whether it is empty or not
if [[ ! -s $tsv_file ]] || [[ ! -f $tsv_file ]]; then
    echo "ERROR: The file $tsv_file does not exist or is empty" >/dev/stderr

    exit $FILE_NOT_FOUND_EXIT_CODE
fi

# Check whether the file is single line or not
# awk 'NF' "$tsv_file" -> Removes all the empty lines
# And then check whether the file has single line only which is assumed to be header.

non_empty_lines=$(gawk 'NF' "$tsv_file")

# echo $result
gawk -v INVALID_INPUT_EXIT_CODE=$INVALID_INPUT_EXIT_CODE -v SUCCESS_EXIT_CODE=$SUCCESS_EXIT_CODE -f check_single_line.awk <<<$non_empty_lines || {
    exit_status=$?
    echo "Invalid File. $tsv_file has just headers in it."
    exit $exit_status
}

# Remove 6th and 7th column if they exist
filtered_data_with_removed_columns=$(gawk -f remove_columns.awk <<<$non_empty_lines)

# REMOVED DATA WITH EMPTY CELLS
filtered_data_with_removed_empty_cells=$(gawk -f drop_empty_cell_row.awk <<<$filtered_data_with_removed_columns)

# FILTER DATA WHERE THE NUMBERS OF AFFECTED INDIVIDUALS ARE LESS THAN 0 (NEGATIVE) OR OTHER INVALID DATA
filtered_data_with_positive_individuals=$(gawk -v COL_IDX=3 -f check_positive_numbers.awk <<<$filtered_data_with_removed_empty_cells)

# EXTRACT START DATES
filtered_data_with_extracted_dates=$(gawk -v DATE_COL_IDX=4 -f extract_start_date.awk <<<$filtered_data_with_positive_individuals)

processed_data=$(gawk -v BREACH_COL_IDX=5 -f extract_primary_breach.awk <<<$filtered_data_with_extracted_dates)

gawk -f add_header.awk <<<$processed_data
