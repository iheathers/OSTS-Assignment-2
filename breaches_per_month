# AUTHOR: PRITAM SUWAL SHRESTHA (23771397)

# SCRIPT NAME: breaches_per_month

# DESCRIPTION: Generate a table with months, incidents counts and deviation indicator.
#              For each month, list the number of incidents and
#              Indicator "++", if the count is 1 median-absolute-deviation above the median (or more);
#              Indicator "--", if the count is 1 median-absolute-deviation below the median (or less).
#              If the count is within 1 median-absolute-deviation of the median don't add anything

# USAGE_MSG="USAGE: ./breaches_per_month <tsv_file>"

# ----------------------------------------
# | Month | Counts | Deviation Indicators |
# |-------|--------|----------------------|
# | Jan   | 100    |                      |
# | Feb   | 93     |                      |
# | Mar   | 102    |                      |
# | Apr   | 71     | --                   |
# | May   | 93     |                      |
# | Jun   | 77     | --                   |
# | Jul   | 72     | --                   |
# | Aug   | 75     | --                   |
# | Sep   | 107    | ++                   |
# | Oct   | 95     |                      |
# | Nov   | 93     |                      |
# | Dec   | 77     | --                   |
# ----------------------------------------

#!/usr/bin/env bash

# Colored output for debugging: bash -xv cyber_breaches <tsv_file> <second_argument>
PS4=$'\e[1;32m+${BASH_SOURCE}:${LINENO}: \e[0m'

COMMAND=$0

USAGE_MSG="USAGE: $COMMAND <tsv_file>"

# Exit Codes
SUCCESS_EXIT_CODE=0
INVALID_ARGUMENTS_EXIT_CODE=1
FILE_NOT_FOUND_EXIT_CODE=2
DATA_NOT_FOUND_EXIT_CODE=3
INVALID_FILE_EXIT_CODE=4
INVALID_INPUT_EXIT_CODE=5

# Check if the number of arguments is 1. If not, echo the Usage of the command
if [[ $# -ne 1 ]]; then
    echo $USAGE_MSG >/dev/stderr

    exit $INVALID_ARGUMENTS_EXIT_CODE
fi

tsv_file=$1 # First argument is a tab seperated value file

# Checks if the file exist and if it exist whether it is empty or not
if [[ ! -s $tsv_file ]] || [[ ! -f $tsv_file ]]; then
    echo "ERROR: The file $tsv_file does not exist or is empty" >/dev/stderr

    exit $FILE_NOT_FOUND_EXIT_CODE
fi

# REMOVE EMPTY LINES
non_empty_lines=$(gawk 'NF' "$tsv_file")

# CHECK WHETHER THE FILE HAS HEADER ONLY
gawk -v INVALID_INPUT_EXIT_CODE=$INVALID_INPUT_EXIT_CODE -v SUCCESS_EXIT_CODE=$SUCCESS_EXIT_CODE -f check_single_line.awk <<<$non_empty_lines || {
    exit_status=$?
    echo "ERROR: Invalid File. $tsv_file has just headers in it."
    exit $exit_status
}

# CALCULATE TOTAL INCIDENTS ON EACH MONTH
incidents_per_month=$(gawk 'NR>1' <<<$non_empty_lines | cut -d$'\t' -f 6 | sort -n | uniq -c)

# ADD MISSING MONTH
std_incidents_per_month=$(awk -f add_missing_month_counts.awk <<<$incidents_per_month)

# CALCULATE MEDIAN FROM THE DATA
median=$(gawk -f calculate_median.awk <<<$std_incidents_per_month)

# CALCULATE MAD FROM THE DATA
mad=$(gawk -v median=$median -f calculate_mean_abs_deviation.awk <<<$std_incidents_per_month)

# GENERATE TABLE
gawk -v median=$median -v mad=$mad -f generate_table.awk <<<$std_incidents_per_month
